name: Build, Test, and Publish Shiny App

on:
  push:
    branches: ["main"]
    tags: ["v*.*.*"]   # trigger docker publishing only on version tags
  pull_request:

jobs:
  build-r-package:
    name: Build R package
    runs-on: ubuntu-22.04
    container:
      image: ghcr.io/rocker-org/devcontainer/tidyverse:4.5

    steps:
      - name: Install git-lfs
        run: |
          apt-get update
          apt-get install -y git-lfs

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          lfs: true

      - name: Setup R dependencies (with caching)
        uses: r-lib/actions/setup-r-dependencies@v2
        with:
          extra-packages: any::remotes

      - name: Build R package
        run: |
          R CMD build .

      - name: Install built package
        run: R CMD INSTALL $(ls -1t *.tar.gz | head -n 1)

  docker:
    name: Build & Publish Docker Image
    runs-on: ubuntu-22.04
    needs: build-r-package
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')

    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          lfs: true

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=raw,value=latest

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64,linux/arm64

